{"ast":null,"code":"var _jsxFileName = \"D:\\\\MINHO 1\\xBAAno\\\\LEI\\\\testes2\\\\src\\\\ScreenCapture.js\";\nimport React, { Component, Fragment } from 'react';\nimport html2canvas from 'html2canvas';\nexport default class ScreenCapture extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      on: false,\n      startX: 0,\n      startY: 0,\n      endX: 0,\n      endY: 0,\n      crossHairsTop: 0,\n      crossHairsLeft: 0,\n      isMouseDown: false,\n      windowWidth: 0,\n      windowHeight: 0,\n      borderWidth: 0,\n      cropPositionTop: 0,\n      cropPositionLeft: 0,\n      cropWidth: 0,\n      cropHeigth: 0,\n      imageURL: ''\n    };\n\n    this.componentDidMount = () => {\n      this.handleWindowResize();\n      window.addEventListener('resize', this.handleWindowResize);\n    };\n\n    this.componentWillUnmount = () => {\n      window.removeEventListener('resize', this.handleWindowResize);\n    };\n\n    this.handleWindowResize = () => {\n      const windowWidth = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;\n      const windowHeight = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight;\n      this.setState({\n        windowWidth,\n        windowHeight\n      });\n    };\n\n    this.handStartCapture = () => this.setState({\n      on: true\n    });\n\n    this.handleMouseMove = e => {\n      const {\n        isMouseDown,\n        windowWidth,\n        windowHeight,\n        startX,\n        startY,\n        borderWidth\n      } = this.state;\n      let cropPositionTop = startY;\n      let cropPositionLeft = startX;\n      const endX = e.clientX;\n      const endY = e.clientY;\n      const isStartTop = endY >= startY;\n      const isStartBottom = endY <= startY;\n      const isStartLeft = endX >= startX;\n      const isStartRight = endX <= startX;\n      const isStartTopLeft = isStartTop && isStartLeft;\n      const isStartTopRight = isStartTop && isStartRight;\n      const isStartBottomLeft = isStartBottom && isStartLeft;\n      const isStartBottomRight = isStartBottom && isStartRight;\n      let newBorderWidth = borderWidth;\n      let cropWidth = 0;\n      let cropHeigth = 0;\n\n      if (isMouseDown) {\n        if (isStartTopLeft) {\n          newBorderWidth = `${startY}px ${windowWidth - endX}px ${windowHeight - endY}px ${startX}px`;\n          cropWidth = endX - startX;\n          cropHeigth = endY - startY;\n        }\n\n        if (isStartTopRight) {\n          newBorderWidth = `${startY}px ${windowWidth - startX}px ${windowHeight - endY}px ${endX}px`;\n          cropWidth = startX - endX;\n          cropHeigth = endY - startY;\n          cropPositionLeft = endX;\n        }\n\n        if (isStartBottomLeft) {\n          newBorderWidth = `${endY}px ${windowWidth - endX}px ${windowHeight - startY}px ${startX}px`;\n          cropWidth = endX - startX;\n          cropHeigth = startY - endY;\n          cropPositionTop = endY;\n        }\n\n        if (isStartBottomRight) {\n          newBorderWidth = `${endY}px ${windowWidth - startX}px ${windowHeight - startY}px ${endX}px`;\n          cropWidth = startX - endX;\n          cropHeigth = startY - endY;\n          cropPositionLeft = endX;\n          cropPositionTop = endY;\n        }\n      }\n\n      this.setState({\n        crossHairsTop: e.clientY,\n        crossHairsLeft: e.clientX,\n        borderWidth: newBorderWidth,\n        cropWidth,\n        cropHeigth,\n        cropPositionTop: cropPositionTop,\n        cropPositionLeft: cropPositionLeft\n      });\n    };\n\n    this.handleMouseDown = e => {\n      const startX = e.clientX;\n      const startY = e.clientY;\n      this.setState(prevState => ({\n        startX,\n        startY,\n        cropPositionTop: startY,\n        cropPositionLeft: startX,\n        isMouseDown: true,\n        borderWidth: `${prevState.windowWidth}px ${prevState.windowHeight}px`\n      }));\n    };\n\n    this.handleMouseUp = e => {\n      this.handleClickTakeScreenShot();\n      this.setState({\n        on: false,\n        isMouseDown: false,\n        borderWidth: 0\n      });\n    };\n\n    this.handleClickTakeScreenShot = () => {\n      const {\n        cropPositionTop,\n        cropPositionLeft,\n        cropWidth,\n        cropHeigth\n      } = this.state;\n      const body = document.querySelector('body');\n      html2canvas(body).then(canvas => {\n        let croppedCanvas = document.createElement('canvas');\n        let croppedCanvasContext = croppedCanvas.getContext('2d');\n        croppedCanvas.width = cropWidth;\n        croppedCanvas.height = cropHeigth;\n        croppedCanvasContext.drawImage(canvas, cropPositionLeft, cropPositionTop, cropWidth, cropHeigth, 0, 0, cropWidth, cropHeigth);\n        this.props.onEndCapture(croppedCanvas.toDataURL());\n      });\n    };\n\n    this.renderChild = () => {\n      const {\n        children\n      } = this.props;\n      const props = {\n        onStartCapture: this.handStartCapture\n      };\n      if (typeof children === 'function') return children(props);\n      return children;\n    };\n  }\n\n  render() {\n    const {\n      on,\n      crossHairsTop,\n      crossHairsLeft,\n      borderWidth,\n      isMouseDown,\n      imageURL\n    } = this.state;\n    if (!on) return this.renderChild();\n    return /*#__PURE__*/React.createElement(\"div\", {\n      onMouseMove: this.handleMouseMove,\n      onMouseDown: this.handleMouseDown,\n      onMouseUp: this.handleMouseUp,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 7\n      }\n    }, this.renderChild(), /*#__PURE__*/React.createElement(\"div\", {\n      className: `overlay ${isMouseDown && 'highlighting'}`,\n      style: {\n        borderWidth\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"crosshairs\",\n      style: {\n        left: crossHairsLeft + 'px',\n        top: crossHairsTop + 'px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\nScreenCapture.defaultProps = {\n  onStartCapture: () => null,\n  onEndCapture: () => null\n};","map":{"version":3,"sources":["D:/MINHO 1ÂºAno/LEI/testes2/src/ScreenCapture.js"],"names":["React","Component","Fragment","html2canvas","ScreenCapture","state","on","startX","startY","endX","endY","crossHairsTop","crossHairsLeft","isMouseDown","windowWidth","windowHeight","borderWidth","cropPositionTop","cropPositionLeft","cropWidth","cropHeigth","imageURL","componentDidMount","handleWindowResize","window","addEventListener","componentWillUnmount","removeEventListener","innerWidth","document","documentElement","clientWidth","body","innerHeight","clientHeight","setState","handStartCapture","handleMouseMove","e","clientX","clientY","isStartTop","isStartBottom","isStartLeft","isStartRight","isStartTopLeft","isStartTopRight","isStartBottomLeft","isStartBottomRight","newBorderWidth","handleMouseDown","prevState","handleMouseUp","handleClickTakeScreenShot","querySelector","then","canvas","croppedCanvas","createElement","croppedCanvasContext","getContext","width","height","drawImage","props","onEndCapture","toDataURL","renderChild","children","onStartCapture","render","left","top","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport html2canvas from 'html2canvas';\n\nexport default class ScreenCapture extends Component {\n  static defaultProps = {\n    onStartCapture: () => null,\n    onEndCapture: () => null\n  }\n\n  state = {\n    on: false,\n    startX: 0,\n    startY: 0,\n    endX: 0,\n    endY: 0,\n    crossHairsTop: 0,\n    crossHairsLeft: 0,\n    isMouseDown: false,\n    windowWidth: 0,\n    windowHeight: 0,\n    borderWidth: 0,\n    cropPositionTop: 0,\n    cropPositionLeft: 0,\n    cropWidth: 0,\n    cropHeigth: 0,\n    imageURL: ''\n  }\n\n  componentDidMount = () => {\n    this.handleWindowResize()\n    window.addEventListener('resize', this.handleWindowResize)\n  }\n\n  componentWillUnmount = () => {\n    window.removeEventListener('resize', this.handleWindowResize)\n  }\n\n  handleWindowResize = () => {\n    const windowWidth = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;\n    const windowHeight = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight;\n\n    this.setState({\n      windowWidth,\n      windowHeight\n    })\n  }\n\n  handStartCapture = () => this.setState({ on: true })\n\n  handleMouseMove = (e) => {\n    const { isMouseDown, windowWidth, windowHeight, startX, startY, borderWidth } = this.state\n\n    let cropPositionTop = startY\n    let cropPositionLeft = startX\n    const endX = e.clientX\n    const endY = e.clientY\n    const isStartTop = endY >= startY\n    const isStartBottom = endY <= startY\n    const isStartLeft = endX >= startX\n    const isStartRight = endX <= startX\n    const isStartTopLeft = isStartTop && isStartLeft\n    const isStartTopRight = isStartTop && isStartRight\n    const isStartBottomLeft = isStartBottom && isStartLeft\n    const isStartBottomRight = isStartBottom && isStartRight\n    let newBorderWidth = borderWidth\n    let cropWidth = 0\n    let cropHeigth = 0\n\n    if (isMouseDown) {\n      if (isStartTopLeft) {\n        newBorderWidth = `${startY}px ${windowWidth - endX}px ${windowHeight - endY}px ${startX}px`\n        cropWidth = endX - startX\n        cropHeigth = endY - startY\n      }\n\n      if (isStartTopRight) {\n        newBorderWidth = `${startY}px ${windowWidth - startX}px ${windowHeight - endY}px ${endX}px`\n        cropWidth = startX - endX\n        cropHeigth = endY - startY\n        cropPositionLeft = endX\n      }\n\n      if (isStartBottomLeft) {\n        newBorderWidth = `${endY}px ${windowWidth - endX}px ${windowHeight - startY}px ${startX}px`\n        cropWidth = endX - startX\n        cropHeigth = startY - endY\n        cropPositionTop = endY\n      }\n\n      if (isStartBottomRight) {\n        newBorderWidth = `${endY}px ${windowWidth - startX}px ${windowHeight - startY}px ${endX}px`\n        cropWidth = startX - endX\n        cropHeigth = startY - endY\n        cropPositionLeft = endX\n        cropPositionTop = endY\n      }\n    }\n\n    this.setState({\n      crossHairsTop: e.clientY,\n      crossHairsLeft: e.clientX,\n      borderWidth: newBorderWidth,\n      cropWidth,\n      cropHeigth,\n      cropPositionTop: cropPositionTop,\n      cropPositionLeft: cropPositionLeft\n    })\n  }\n\n  handleMouseDown = (e) => {\n    const startX = e.clientX\n    const startY = e.clientY\n\n    this.setState((prevState) => ({\n      startX,\n      startY,\n      cropPositionTop: startY,\n      cropPositionLeft: startX,\n      isMouseDown: true,\n      borderWidth: `${prevState.windowWidth}px ${prevState.windowHeight}px`\n    }))\n  }\n\n  handleMouseUp = (e) => {\n    this.handleClickTakeScreenShot()\n    this.setState({\n      on: false,\n      isMouseDown: false,\n      borderWidth: 0\n    })\n  }\n\n  handleClickTakeScreenShot = () => {\n    const { cropPositionTop, cropPositionLeft, cropWidth, cropHeigth } = this.state\n    const body = document.querySelector('body')\n\n    html2canvas(body).then(canvas => {\n      let croppedCanvas = document.createElement('canvas')\n      let croppedCanvasContext = croppedCanvas.getContext('2d')\n\n      croppedCanvas.width = cropWidth;\n      croppedCanvas.height = cropHeigth;\n\n      croppedCanvasContext.drawImage(canvas, cropPositionLeft, cropPositionTop, cropWidth, cropHeigth, 0, 0, cropWidth, cropHeigth);\n\n      this.props.onEndCapture(croppedCanvas.toDataURL())\n    });\n  }\n\n  renderChild = () => {\n    const { children } = this.props\n\n    const props = {\n      onStartCapture: this.handStartCapture\n    }\n\n    if (typeof children === 'function') return children(props)\n    return children\n  }\n\n  render() {\n    const {\n      on,\n      crossHairsTop,\n      crossHairsLeft,\n      borderWidth,\n      isMouseDown,\n      imageURL\n    } = this.state\n\n    if (!on) return this.renderChild()\n\n    return (\n      <div\n        onMouseMove={this.handleMouseMove}\n        onMouseDown={this.handleMouseDown}\n        onMouseUp={this.handleMouseUp}\n      >\n        {this.renderChild()}\n        <div\n          className={`overlay ${isMouseDown && 'highlighting'}`}\n          style={{ borderWidth }}\n        />\n        <div\n          className=\"crosshairs\"\n          style={{ left: crossHairsLeft + 'px', top: crossHairsTop + 'px' }}\n        />\n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}